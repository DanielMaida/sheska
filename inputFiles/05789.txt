Semi-supervised Conditional GANs
Kumar Sricharan?1, Raja Bala1, Matthew Shreve1,
Hui Ding1, Kumar Saketh2, and Jin Sun1
1Interactive and Analytics Lab, Palo Alto Research Center, Palo Alto, CA
2Verizon Labs, Palo Alto, CA
August 22, 2017
Abstract
We introduce a new model for building conditional generative models in a semi-
supervised setting to conditionally generate data given attributes by adapting the
GAN framework. The proposed semi-supervised GAN (SS-GAN) model uses a
pair of stacked discriminators to learn the marginal distribution of the data, and
the conditional distribution of the attributes given the data respectively. In the
semi-supervised setting, the marginal distribution (which is often harder to learn)
is learned from the labeled + unlabeled data, and the conditional distribution
is learned purely from the labeled data. Our experimental results demonstrate
that this model performs significantly better compared to existing semi-supervised
conditional GAN models.
1 Introduction
Generative adversarial networks (GAN’s) [2] are a recent popular technique for learning
generative models for high-dimensional unstructured data (typically images). GAN’s
employ two networks - a generator G that is tasked with producing samples from the
data distribution, and a discriminator D that aims to distinguish real samples from
the samples produced by G. The two networks alternatively try to best each other,
ultimately resulting in the generator G converging to the true data distribution.
While most of the research on GAN’s is focused on the unsupervised setting, where
the data is comprised of unlabeled images, there has been research on conditional
GAN’s [1] where the goal is to learn a conditional model of the data, i.e. to build
a conditional model that can generate images given a particular attribute setting. In
one approach [1], both the generator and discriminator are fed attributes as side infor-
mation so as to enable the generator to generate images conditioned on attributes. In
an alternative approach proposed in [5], the authors build auxiliary classifier GAN’s
(AC-GAN’s) where side information is reconstructed by the discriminator instead. Irre-
spective of the specific approach, this line of research focuses on the supervised setting
where it is assumed that all the images have attribute tags.
Given that labels are expensive, it is of interest to explore semi-supervised settings
where only a small fraction of the images have attribute tags, while a majority of the
images are unlabeled. There has been some work on using GAN’s in the semi-supervised
setting. [7] and [8] use GAN’s to perform semi-supervised classification by using a
?sricharan.kumar@parc.com
1
ar
X
iv
:1
70
8.
05
78
9v
1 
 [
st
at
.M
L
] 
 1
9 
A
ug
 2
01
7
generator-discriminator pair to learn an unconditional model of the data and fine-tune
the discriminator using the small amount of labeled data for prediction. However, we
are not aware of work on building conditional models in the semi-supervised setting (see
2.1 for details). The closest work we found was AC-GAN’s, which can be extended to
the semi-supervised setting in a straightforward manner (as was alluded to briefly by
the authors in their paper).
In the proposed semi-supervised GAN (SS-GAN) approach, we take a different route.
We instead supply the side attribute information to the discriminator as is the case
with supervised GAN’s. We partition the discriminator’s task of evaluating if the joint
samples of images and attributes are real or fake into two separate tasks: (i) evaluating if
the images are real or fake, and (ii) evaluating if the attributes given an image are real or
fake. We subsequently use all the labeled and unlabeled data to assist the discriminator
with the first task, and only the labeled images for the second task. The intuition
behind this approach is that the marginal distribution of the images is much harder to
model relative to the conditional distribution of the attributes given an image, and by
separately evaluating the marginal and conditional samples, we can exploit the larger
unlabeled pool to accurately estimate the marginal distribution.
Our main contributions in this work are as follows:
1. We present the first extensive discussion of the semi-supervised conditional gener-
ation problem using GAN’s.
2. Related to (1), we apply the AC-GAN approach to the semi-supervised setting
and present experimental results.
3. Finally, our main contribution is a new model called SS-GAN to effectively address
the semi-supervised conditional generative modeling problem, which outperforms
existing approaches including AC-GAN’s for this problem.
The rest of this paper is organized as follows: In Section 2, we describe existing work
on GAN’s including details about the unsupervised, supervised and semi-supervised
settings. Next, in Section 3, we describe the proposed SS-GAN models, and contrast
the model against existing semi-supervised GAN solutions. We present experimental
results in Section 4, and finally, we give our conclusions in Section 5.
2 Existing GAN’s
2.1 Framework
We assume that our data-set is comprised of n+m images
X = {X1, . . . , Xn, Xn+1, . . . , Xn+m},
where the first n images are accompanied by attributes
Y = {Y1, . . . , Yn}.
Each Xi is assumed to be of dimension px×py×pc, where pc is the number of channels.
The attribute tags Yi are assumed to be discrete variables of dimension {0, 1, ..,K? 1}d
- i.e., each attribute is assumed to be d-dimensional and each individual dimension of
an attribute tag can belong to one of K different classes. Observe that this accommo-
dates class variables (d = 1), and binary attributes (K = 2). Finally, denote the joint
distribution of images and attributes by p(x, y), the marginal distribution of images by
p(x), and the conditional distribution of attributes given images by p(y|x). Our goal
is to learn a generative model G(z, y) that can sample from P (x|y) for a given y by
exploiting information from both the labeled and unlabeled sets.
2
(a) Unsupervised GAN (b) Conditional GAN
(c) Auxiliary classifier GAN (d) Semi-supervised stacked GAN
Figure 1: Illustration of 4 GAN models: (a) Unsupervised GAN, (b) Conditional
GAN (for supervised setting), (c) Auxiliary Classifier GAN (for supervised and semi-
supervised setting) and (d) proposed model semi-supervised GAN model. These models
will be elaborated on further in the sequel.
3
2.2 Unsupervised GAN’s
Figure 2: Illustration of unsupervised GAN model.
In the unsupervised setting (n = 0), the goal is to learn a generative model Gu(z; ?u)
that samples from the marginal image distribution p(x), by transforming vectors of noise
z as x = Gu(z; ?u). In order for Gu() to learn this marginal distribution, a discriminator
Du(x;?u) is trained jointly [2]. The unsupervised loss functions for the generator and
discriminator are as follows:
Lud(Du, Gu) =
1
n+m
(
n+m?
i=1
log(Du(Xi;?u)) + log(1?Du(Gu(zi; ?u);?u))
)
, (1)
and
Lug (Du, Gu) =
1
n+m
(
n+m?
i=1
log(Du(Gu(zi; ?u);?u))
)
, (2)
The above equations are alternatively optimized with respect to ?u and ?u respectively.
The unsupervised GAN model is illustrated in 2.
2.3 Supervised GAN’s
In the supervised setting (i.e., m = 0), the goal is to learn a generative model Gs(z, y; ?s)
that samples from the conditional image distribution p(x|y), by transforming vectors of
noise z as x = Gs(z, y; ?s). There are two proposed approaches for solving this problem:
2.3.1 Conditional GAN’s
In order for Gs() to learn this conditional distribution, a discriminator Ds(x, y;?s) is
trained jointly. The goal of the discriminator is to distinguish whether the joint samples
(x, y) are samples from the data or from the generator. The supervised loss functions
for the generator and discriminator for conditional GAN (C-GAN) are as follows:
Lsd(Ds, Gs) =
1
n
(
n?
i=1
log(Ds(Xi, Yi;?s)) + log(1?Ds(Gs(zi, Yi; ?s), Yi;?s))
)
, (3)
and
Lsg(Ds, Gs) =
1
n
(
n?
i=1
log(Ds(Gs(zi, Yi; ?s);?s))
)
, (4)
4
The above equations are alternatively optimized with respect to ?s and ?s respectively.
The conditional GAN model is illustrated in 3.
Figure 3: Illustration of Supervised Conditional GAN model.
2.3.2 Auxiliary-classifier GAN’s
An alternative approach [5] to supervised conditional generation is to only supply the
images x to the discriminator, and ask the discriminator to additionally recover the true
attribute information. In particular, the discriminator Da(x;?a) produces two outputs:
(i) Da(rf)(x;?a) and (ii) Da(a)(x, y;?a), where the first output is the probability of x
being real or fake, and the second output is the estimated conditional probability of y
given x. In addition to the unsupervised loss functions, the generator and discriminator
are jointly trained to recover the true attributes for any given images X. In particular,
define the attribute loss function as
Laa(Da(a), Ga) =
1
n
(
n?
i=1
log(Da(a)(Xi;Yi?a) + log(Da(a)(Ga(zi, Yi; ?a);Yi?a)
)
. (5)
The loss function for the discriminator is given by
Lad(Da, Ga) = Lud(Da(rf), Ga) + Laa(Da(a), Ga), (6)
and for the generator is given by
Lag(Da, Ga) = Lug (Da(rf), Ga) + Laa(Da(a), Ga), (7)
2.3.3 Comparison between C-GAN and AC-GAN
The key difference between C-GAN and AC-GAN is that instead of asking the discrim-
inator to estimate the probability distribution of the attribute given the image as is the
case in AC-GAN, C-GAN instead supplies discriminator Ds with both (x, y) and asks
it to estimate the probability that (x, y) is consistent with the true joint distribution
p(x, y).
While both models are designed to learn a conditional generative model, we did
not find extensive comparisons between the two approaches in literature. To this end,
we compared the performance of the two architectures using a suite of qualitative and
quantitative experiments on a collection of data sets, and through our analysis (see
Section 4), determined that C-GAN typicaly outperforms AC-GAN in performance.
5
2.4 Semi-supervised GAN’s
We now consider the the semi-supervised setting where m > 0, and typically n << m.
In this case, both C-GAN and AC-GAN can be applied to the problem. Because C-GAN
required the attribute information to be fed to the discriminator, it can be applied only
by trivially training it only on the labeled data, and throwing away the unlabeled data.
We will call this model SC-GAN.
On the other hand, AC-GAN can be applied to this semi-supervised setting in a far
more useful manner as alluded to by the authors in [10]. In particular, the adversarial
loss terms Lud(Da, Ga) and Lug (Da, Ga) are evaluated over all the images in X, while the
attribute estimation loss term Laa(Da, Ga) is evaluated over only the n real images with
attributes. We will call this model SA-GAN. This model is illustrated in 4.
Figure 4: Illustration of Auxiliary Classifier GAN model.
3 Proposed Semi-supervised GAN
We will now propose a new model for learning conditional generator models in a semi-
supervised setting. This model aims to extend the C-GAN architecture to the semi-
supervised setting that can exploit the unlabeled data unlike SC-GAN, by overcoming
the difficulty of having to provide side information to the discriminator. By extending
the C-GAN architecture, we aim to enjoy the same performance advantages over SA-
GAN that C-GAN enjoys over AC-GAN.
In particular, we consider a stacked discriminator architecture comprising of a pair
of discriminators Du and Ds, with Du tasked with with distinguishing real and fake
images x, and Ds tasked with distinguishing real and fake (image, attribute) pairs
(x, y). Unlike in C-GAN, Du will separately estimate the probability that x is real
using both the labeled and unlabeled instances, and Ds will separately estimate the
probability that y given x is real using only the labeled instances. The intuition behind
this approach is that the marginal distribution p(x) is much harder to model relative
to the conditional distribution p(y|x), and by separately evaluating the marginal and
conditional samples, we can exploit the larger unlabeled pool to accurately estimate the
marginal distribution.
3.1 Model description
Let Dss(x, y;?ss) denote the discriminator, which is comprised of two stacked discrimi-
nators: (i) Ds(x;?ss) outputs the probability that the marginal image x is real or fake,
6
and (ii) Du(x, y;?ss) outputs the probability that the conditional attribute y given the
image x is real or fake. The generator Gss(z, y; ?ss) is identical to the generator in C-
GAN and AC-GAN. The loss functions for the generator and the pair of discriminators
are defined below:
Lssd (Du, Gss) = Lud(Du, Gss), (8)
Lssd (Ds, Gss) = Lsd(Ds, Gss), (9)
and
Lssg (Dss, Gss) = Lug (Dss(u), Gss) + ?Lsg(Dss(s), Gss), (10)
where ? controls the effect of the conditional term relative to the unsupervised term.
Model architecture: We design the model so that Dss(u)(x;?ss) depends only on the
x argument, and produces an intermediate output (last but one layer of unsupervised
discriminator) h(x), to which the argument y is subsequently appended and fed to the
supervised discriminator to produce the probability Dss(s)(x;?ss) that the joint samples
(x, y) are real/fake. The specific architecture is shown in Figure 5.
The advantage of this proposed model which supplies x to Dss(s) via the features
learned by Dss(u) over directly providing the x argument to Dss(s) is that Dss(s) can
not overfit to the few labeled examples, and instead must rely on the features general
to the whole population in order to uncover the dependency between x and y.
For illustration, consider the problem of conditional face generation where one of
the attributes of interest is eye-glasses. Also, assume that in the limited set of labeled
images, only one style of eye-glasses (e.g., glasses with thick rims) are encountered. If
so, then the conditional discriminator can learn features specific to rims to detect glasses
if the entire image x is available to the supervised discriminator. On the other hand,
the features h(x) learned by the unsupervised discriminator would have to generalize
over all kinds of eyeglasses and not just rimmed eyeglasses specifically. In our stacked
model, by restricting the supervised discriminator to access to the image x through the
features h(x) learned by the unsupervised discriminator, we ensure that the supervised
discriminator now generalizes to all different types of eyeglasses when assessing the
conditional fit of the glasses attribute.
Figure 5: Illustration of proposed semi-supervised GAN model. Intermediate features
h(x) from the last but one layer of the unsupervised discriminator are concatenated with
y and fed to the supervised discriminator.
7
3.2 Convergence analysis of model
Denote the distribution of the samples provided by the generator as p?(x, y). Provided
that the discriminator has sufficient modeling power, following Section 4.2 in [2], it fol-
lows that if we have sufficient data m, and if the discriminator is trained to convergence,
Du(x;?ss) will converge to p(x)/(p(x) + p
?(x)), and consequently, the generator will
adapt its output so that p?(x) will converge to p(x).
Because n is finite and typically small, we are not similarly guaranteed thatDs(x, y;?ss)
will converge to p(x, y)/(p(x, y) + p?(x, y)), and that consequently, the generator will
adapt its output so that p?(x, y) will converge to p(x, y). However, we make the key ob-
servation that because p?(x) converges to p(x) though the use of Du, Ds(x, y;?ss) will
equivalently look to converge to p(y|x)/(p(y|x) +p?(y|x)), and given that these distribu-
tions are discrete, plus the fact that the supervised discriminator Ds(x, y;?ss) operates
on x via the low-dimensional embedding h(x), we hypothesize that Ds(x, y;?ss) will
successfully learn to closely approximate p(y|x)/(p(y|x) + p?(y|x)) even when n is small.
The joint use of Du and Ds will therefore ensure that the joint distribution p
?(x, y) of
the samples produced by the generator will converge to the true distribution p(x, y).
4 Experimental results
We propose a number of different experiments to illustrate the performance of the pro-
posed SS-GAN over existing GAN approaches.
4.1 Models and datasets
We compare the results of the proposed SS-GAN model against three other models:
1. Standard GAN model applied to the full data-set (called C-GAN)
2. Standard GAN model applied to only the labeled data-set (called SC-GAN)
3. Supervised AC-GAN model applied to the full data-set (called AC-GAN)
4. Semi-supervised AC-GAN model (called SA-GAN)
We illustrate our results on 3 different datasets: (i) MNIST, (ii) celebA, and (iii) CI-
FAR10.
In all our experiments, we use the DCGAN architecture proposed in [6], with slight
modifications to the generator and discriminator to accommodate the different variants
described in the paper. These modifications primarily take the form of (i) concatenating
the inputs (x, y) and (z, y) for the supervised generator and discriminator respectively,
and adding an additional output layer to the discriminator in the case of AC-GAN, and
connecting the last but one layer of Du to Ds in the proposed SS-GAN. In particular,
we use the same DCGAN architecture as in [6] for MNIST and celebA, and a slightly
modified version of the celebA architectures to accommodate the smaller 32x32 resolu-
tions of the cifar10 dataset. The stacked DCGAN discriminator model for the celebA
faces dataset is shown in Figure 6.
4.2 Evaluation criteria
We use a variety of different evaluation criteria to contrast SS-GAN against the models
C-GAN, AC-GAN, SC-GAN and SA-GAN listed earlier.
1. Visual inspection of samples: We visually display a large collection of samples from
each of the models and highlight differences in samples from the different models.
8
Figure 6: Illustration of SS-GAN discriminator for celebA dataset. The different layer
operations in the neural network are illustrated by the different colored arrows (Conv
= convolutional operator of stride 2, BN = Batch Normalization).
2. Reconstruction error: We optimize the inputs to the generator to reconstruct the
original samples in the dataset (see Section 5.2 in [10]) with respect to squared
reconstruction error. Given the drawbacks of reconstruction loss, we also compute
the structural similarity metric (SSIM) [9] in addition to the reconstruction error.
3. Attribute/class prediction from pre-trained classifier (for generator): We pre-train
an attribute/class predictor from the entire training data set, and apply this pre-
dictor to the samples generated from the different models, and report the accuracy
(RMSE for attribute prediction, 0-1 loss for class prediction).
4. Supervised learning error (for discriminator): We use the features from the dis-
criminator and build classifiers on these features to predict attributes, and report
the accuracy.
5. Sample diversity: To ensure that the samples being produced are representative of
the entire population, and not just the labeled samples, we first train a classifier
than can distinguish between the labeled samples (class label 0) and the unlabeled
samples (class label 1). We then apply this classifier to the samples generated by
each of the generators, and compute the mean probability of the samples belonging
to class 0. The closer this number is to 0, the better the unlabeled samples are
represented.
4.3 MNIST
The MNIST dataset contains 60,000 labeled images of digits. We perform semi-supervised
training with a small randomly picked fraction of these, considering setups with 10, 20,
and 40 labeled examples. We ensure that each setup has a balanced number of examples
from each class. The remaining training images are provided without labels.
4.3.1 Visual sample inspection
In Figure 7, we show representative samples form the 5 different models for the case
with n = 20 labeled examples. In addition, in figures 9, 10, 11, 12, 13, we show more
detailed results for this case with 20 labeled example (two examples per digit). In these
detailed results, each row corresponds to a particular digit. Both C-GAN and AC-GAN
successfully learn to model both the digits and the association between the digits and
their class label. From the results, it is clear that SC-GAN learns to predict only the
digit styles of each digit made available in the labeled set. While SA-GAN produces
9
(a) MNIST samples 1 (b) MNIST samples 2
Figure 7: 2 sets of representative samples from the 5 models (each row from top to
bottom corresponds to samples from C-GAN, AC-GAN, SC-GAN, SA-GAN and SS-
GAN). SS-GAN’s performance is close to the supervised models (C-GAN and AC-GAN).
SA-GAN gets certain digit associations wrong, while SC-GAN generates copies of digits
from the labeled set.
greater diversity of samples, it suffers in producing the correct digits for each label.
SS-GAN on the other hand both produces diverse digits while also being accurate. In
particular, its performance closely matches the performance of the fully supervised C-
GAN and AC-GAN models. This is additionally borne out by the quantitative results
shown in Tables 1, 2 and 3 for the cases n = 10, 20 and 40 respectively, as shown below.
Samples source Class pred. error Recon. error Sample diversity Discrim. error
True samples 0.0327 N/A 0.992 N/A
Fake samples N/A N/A 1.14e-05 N/A
C-GAN 0.0153 0.0144 1.42e-06 0.1015
AC-GAN 0.0380 0.0149 1.49e-06 0.1140
SC-GAN 0.0001 0.1084 0.999 0.095
SA-GAN 0.3091 0.0308 8.62e-06 0.1062
SS-GAN 0.1084 0.0320 0.0833 0.1024
Table 1: Compilation of quantitative results for the MNIST dataset for n = 10.
Samples source Class pred. error Recon. error Sample diversity Discrim. error
True samples 0.0390 N/A 0.994 N/A
Fake samples N/A N/A 2.86e-05 N/A
C-GAN 0.0148 0.01289 8.74e-06 0.1031
AC-GAN 0.0189 0.01398 9.10e-06 0.1031
SC-GAN 0.0131 0.0889 0.998 0.1080
SA-GAN 0.2398 0.02487 2.18e-05 0.1010
SS-GAN 0.1044 0.0160 2.14e-05 0.1014
Table 2: Compilation of quantitative results for the MNIST dataset for n = 20.
4.3.2 Discussion of quantitative results
The fraction of incorrectly classified points for each source, the reconstruction error, the
sample diversity metric and the discriminator error is shown in Tables 1, 2 and 3 be-
low. SS-GAN comfortably outperforms SA-GAN with respect to classification accuracy,
and comfortably beats SC-GAN with respect to reconstruction error (due to the limited
sample diversity of SC-GAN). The sample diversity metric for SS-GAN is slightly worse
compared to SA-GAN, but significantly better than SC-GAN. Taken together, in con-
10
Samples source Class pred. error Recon. error Sample diversity Discrim. error
True samples 0.0390 N/A 0.993 N/A
Fake samples N/A N/A 1.63e-05 N/A
C-GAN 0.0186 0.0131 1.36e-05 0.1023
AC-GAN 0.0141 0.0139 6.84e-06 0.1054
SC-GAN 0.0228 0.080 0.976 0.1100
SA-GAN 0.1141 0.00175 1.389e-05 0.1076
SS-GAN 0.0492 0.0135 3.54e-05 0.1054
Table 3: Compilation of quantitative results for the MNIST dataset for n = 40.
junction with the visual analysis of the samples, these results conclusively demonstrate
that SS-GAN is superior to SA-GAN and SC-GAN in the semi-supervised setting.
From the three sets of results for the different labeled sample sizes (n = 10, 20 and
40), we see that the performance of all the models increases smoothly with increasing
sample size, but with SSGAN still outperforming the other two semi-supervised models
for each of the settings for the number of labeled samples.
4.3.3 Semi-supervised learning error
For MNIST, we run an additional experiment, where we draw samples from the various
generators, train a classifier using each set of samples, and record the test error perfor-
mance of this classifier. On MNIST, with 20 labeled examples, we show the accuracy
of classifiers trained using samples generated from different models using MNIST in Ta-
ble 4. From the results in table 4, we see that our model SS-GAN is performing close to
Samples source 10-fold 0-1 error
C-GAN 5.1
AC-GAN 5.2
SC-GAN 12.9
SA-GAN 24.3
SS-GAN 5.4
Table 4: Classifier accuracy using samples generated from different models for MNIST.
the supervised models. In particular, we note that these results are the state-of-the-art
for MNIST given just 20 labeled examples (please see [7] for comparison). However,
the performance as the number of labeled examples increases remains fairly stationary,
and furthermore is not very effective for more complex datasets such as CIFAR10 and
celebA, indicating that this approach of using samples from GAN’s to train classifiers
should be restricted to very low sample settings for simpler data sets like MNIST.
4.4 celebA dataset results
CelebFaces Attributes Dataset (CelebA) [4] is a large-scale face attributes dataset with
more than 200K celebrity images, each with 40 attribute annotations. The images in
this dataset cover large pose variations and background clutter. Of the 40 attributes, we
sub-select the following 18 attributes: 0: ’Bald’, 1: ’Bangs’, 2: ’Black Hair’, 3: ’Blond
Hair’, 4: ’Brown Hair’, 5: ’Bushy Eyebrows’, 6: ’Eyeglasses’, 7: ’Gray Hair’, 8: ’Heavy
Makeup’, 9: ’Male’, 10: ’Mouth Slightly Open’, 11: ’Mustache’, 12: ’Pale Skin’, 13:
’Receding Hairline’, 14: ’Smiling’, 15: ’Straight Hair’, 16: ’Wavy Hair’, 17:’Wearing
Hat’.
11
(a) CelebA samples 1
(b) CelebA samples 2
Figure 8: 2 sets of representative samples from the 5 models (each row from top to
bottom corresponds to samples from C-GAN, AC-GAN, SC-GAN, SA-GAN and SS-
GAN respectively). SS-GAN’s performance is close to the supervised models (C-GAN
and AC-GAN). SA-GAN gets certain associations wrong (e.g., attributes 0, 7 and 12),
while SC-GAN produces samples of poor visual quality.
4.4.1 Visual sample inspection
In Figure 8, we show representative samples form the 5 different models for the case
with n = 1000 labeled examples for the celebA dataset. Each row correponds to an
individual model, and each column corresponds to one of the 18 different attributes
listed above. In addition, we show more detailed samples generated by the 5 different
models in figures 15, 14, 16, 17, and 18. In each of these figures, each row corresponds
to a particular attribute type while all the other attributes are set to 0. From the
generated samples, we can once again see that the visual samples produced by SS-GAN
are close to the quality of the samples generated by the fully supervised models C-GAN
and AC-GAN. SC-GAN when applied to the subset of data produces very poor results
(significant mode collapse + poor quality of the generated images), while SA-GAN is
relatively worse when compared to SS-GAN. For instance, SA-GAN produces images
with incorrect attributes for attributes 0 (faces turned to a side instead of bald), 7 (faces
with hats instead of gray hair), and 12 (generic faces instead of faces with pale skin).
4.4.2 Discussion of quantitative results
The four different quantitative metrics - The attribute prediction error, the reconstruc-
tion error, the sample diversity metric and the discriminator error - are shown in Table 5.
SS-GAN comfortably outperforms SA-GAN and achieves results close to the fully
supervised models for the attribute prediction error metric. It is interesting to note that
SC-GAN produces better attribute prediction error numbers than the SA-GAN model,
while producing notably worse samples. We also find that with respect to reconstruction
error and the SSIM metric, SS-GAN marginally out performs SA-GAN while coming
close to the performance of the supervised C-GAN and AC-GAN models. As expected,
12
Samples source Attribute RMSE Recon. error SSIM Sample diversity Disc. error
True samples 0.04 N/A N/A 0.99 N/A
Fake samples N/A N/A N/A 0.001 N/A
C-GAN 0.25 0.036 0.497 0.002 0.07
AC-GAN 0.29 0.047 0.076 0.005 0.06
SC-GAN 0.26 0.343 0.143 0.454 0.01
SA-GAN 0.36 0.042 0.167 0.006 0.07
SS-GAN 0.31 0.040 0.217 0.004 0.03
Table 5: Compilation of quantitative results for the celebA dataset. Across the joint
set of metrics, SS-GAN achieves performance close to the supervised C-GAN and AC-
GAN models, while performing much better than either of the semi-supervised models
- SC-GAN and SA-GAN.
SC-GAN performs poorly in this case. We also find that SS-GAN has a fairly low sample
diversity score, marginally higher than C-GAN, but better than SA-GAN, and better
even than the fully supervised AC-GAN. Finally, SS-GAN comfortably outperforms
SA-GAN and achieves results close to the fully supervised model with respect to the
discriminator feature error.
4.5 cifar10 dataset
The CIFAR-10 dataset [3] consists of 60000 32x32 colour images in 10 classes, with 6000
images per class. There are 50000 training images and 10000 test images. The following
are the 10 classes: airplane, automobile, bird, cat, deer, dog, frog, horse, ship, truck.
4.5.1 Visual sample inspection
From the generated samples in figures 19, 20, 21, 22 and 23, we can see that the visual
samples produced by SS-GAN are close to the quality of the samples generated by
C-GAN. All the other three models, AC-GAN, SA-GAN, and SC-GAN suffer from
significant mode collapse. We especially found the poor results of AC-GAN in the fully
supervised case surprising, especially given the good performance of C-GAN on cifar10,
and the good performance of AC-GAN on the MNIST and celebA datasets.
Samples source Class pred. error Recon. error SSIM Sample diversity Disc. error
True samples 0.098 N/A N/A 1.00 N/A
Fake samples N/A N/A N/A 1.21e-07 N/A
C-GAN 0.198 0.041 0.501 1.39e-07 0.874
AC-GAN 0.391 0.204 0.024 1.41e-06 0.872
SC-GAN 0.355 0.213 0.026 0.999 0.870
SA-GAN 0.0.468 0.173 0.021 2.30e-06 0.874
SS-GAN 0.299 0.061 0.042 6.54e-06 0.891
Table 6: Compilation of quantitative results for the cifar10 dataset. Across the joint
set of metrics, SS-GAN achieves performance close to the supervised C-GAN and AC-
GAN models, while performing much better than either of the semi-supervised models
- SC-GAN and SA-GAN.
4.5.2 Discussion of quantitative results
The different quantitative metrics computed against the cifar10 datasets are shown in
Table 6. In our experiments, we find that the samples generated by SS-GAN are correctly
13
classified 70 percent of the time, which is second best after C-GAN and is off from the
true samples by 15 percent. We also find that the reconstruction error for SS-GAN
comes close to the performance of C-GAN and comfortably out performs the other three
models. This result is consistent with the visual inspection of the samples. The sample
diversity metric for SS-GAN is significantly better than SC-GAN, and comparable to
the other three models.
5 Conclusion and discussion
We proposed a new GAN based framework for learning conditional models in a semi-
supervised setting. Compared to the only existing semi-supervised GAN approaches
(i.e., SC-GAN and SA-GAN), our approach shows a marked improvement in perfor-
mance over several datasets including MNIST, celebA and CIFAR10 with respect to
visual quality of the samples as well as several other quantitative metrics. In addi-
tion, the proposed technique comes with theoretical convergence properties even in the
semi-supervised case where the number of labeled samples n is finite.
From our results on all three of these datasets, we can conclude that the proposed
SS-GAN performs almost as well as the fully supervised C-GAN and AC-GAN models,
even when provided with very low number of labeled samples (down to the extreme
limit of just one sample per class in the case of MNIST). In particular, it comfortably
outperforms the semi-supervised variants of C-GAN and AC-GAN (SC-GAN and SA-
GAN respectively). While the superior performance over SC-GAN is clearly explained
by the fact that SC-GAN is only trained on the labeled data set, the performance
advantage of SS-GAN over SA-GAN is not readily apparent. We explicitly discuss the
reasons for this below:
5.1 Why does SS-GAN work better than SA-GAN?
1. Unlike AC-GAN where the discriminator is tasked with recovering the attributes,
in C-GAN, the discriminator is asked to estimate if the pair (x, y) is real or fake.
This use of adversarial loss that classifies (x, y) pairs as real or fake over the
cross-entropy loss that asks the discriminator to recover y from x seems to work
far better as demonstrated by our experimental results. Our proposed SS-GAN
model learns the association between x and y using an adversarial loss as is the case
with C-GAN, while SA-GAN uses the cross-entropy loss over the labeled samples.
2. The stacked Du, Ds architecture in SS-GAN where the intermediate features of
Du are fed to Ds ensures that Ds, and in turn the generator does not over-fit to
the labeled samples. In particular, Ds is forced to learn discriminative features
that characterize the association between x and y based on the features over the
entire unlabeled set learned by Du, which ensures generalization to the complete
set of images.
References
[1] Jon Gauthier. Conditional generative adversarial nets for convolutional face gen-
eration. Class Project for Stanford CS231N: Convolutional Neural Networks for
Visual Recognition, Winter semester, 2014(5):2, 2014.
[2] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley,
Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In
Advances in neural information processing systems, pages 2672–2680, 2014.
14
[3] Alex Krizhevsky and Geoffrey Hinton. Learning multiple layers of features from
tiny images. 2009.
[4] Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face at-
tributes in the wild. In Proceedings of International Conference on Computer Vision
(ICCV), 2015.
[5] Augustus Odena, Christopher Olah, and Jonathon Shlens. Conditional image syn-
thesis with auxiliary classifier gans. arXiv preprint arXiv:1610.09585, 2016.
[6] Alec Radford, Luke Metz, and Soumith Chintala. Unsupervised representation
learning with deep convolutional generative adversarial networks. arXiv preprint
arXiv:1511.06434, 2015.
[7] T Salimans, I Goodfellow, W Zaremba, V Cheung, A Radford, and X Chen. Im-
proved techniques for training gans. nips, 2016. Yan, Y. Ding, P. Li, Q. Wang, Y.
Xu, W. Zuo, Mind the Class Weight Bias: Weighted Maximum Mean Discrepancy
for Unsupervised Domain Adaptation, CVPR, 2017.
[8] Jost Tobias Springenberg. Unsupervised and semi-supervised learning with cate-
gorical generative adversarial networks. arXiv preprint arXiv:1511.06390, 2015.
[9] Zhou Wang, Alan C Bovik, Hamid R Sheikh, and Eero P Simoncelli. Image quality
assessment: from error visibility to structural similarity. IEEE transactions on
image processing, 13(4):600–612, 2004.
[10] S. Xiang and H. Li. On the Effects of Batch and Weight Normalization in Generative
Adversarial Networks. ArXiv e-prints, April 2017.
15
Figure 9: Digits generated by C-GAN model in the fully supervised setting (n=60000,
m=0).
Figure 10: Digits generated by AC-GAN model in the fully supervised setting (n=60000,
m=0).
Figure 11: Digits generated by SC-GAN model in the small label supervised setting )
(n=20, m=0).
Figure 12: Digits generated by SA-GAN model in the semi-supervised setting (n=20,
m=60000).
16
Figure 13: Digits generated by SS-GAN model in the semi-supervised setting (n=20,
m=60000). SS-GAN samples are close to the quality achieved by the supervised C-GAN
and AC-GAN models, avoids the incorrect attribute issues that affect the SA-GAN
model, and the limited diversity of samples from SC-GAN.
Figure 14: Faces generated by C-GAN model in the fully supervised setting (n=51200,
m=0).
17
Figure 15: Faces generated by AC-GAN model in the fully supervised setting (n=51200,
m=0).
18
Figure 16: Faces generated by SC-GAN model in the small label supervised setting
(n=1024, m=0).
19
Figure 17: Faces generated by SA-GAN model in the semi-supervised setting (n=1024,
m=50000).
20
Figure 18: Faces generated by SS-GAN model in the semi-supervised setting (n=1024,
m=50000). SS-GAN samples are close to the quality achieved by the supervised C-GAN
and AC-GAN models, avoids the incorrect attribute issues that affect the SA-GAN
model, and the poor quality of samples from SC-GAN.
Figure 19: Cifar10 images generated by C-GAN model in the fully supervised setting
(n=50000, m=0).
21
Figure 20: Cifar10 images generated by AC-GAN model in the fully supervised setting
(n=50000, m=0).
Figure 21: Cifar10 images generated by SC-GAN model in the semi-supervised setting
(n=4000, m=50000).
22
Figure 22: Cifar10 images generated by SA-GAN model in the semi-supervised setting
(n=4000, m=50000).
Figure 23: Cifar10 images generated by SS-GAN model in the semi-supervised setting
(n=4000, m=50000). SS-GAN comes close to C-GAN with respect to quality of the
samples, and avoids the mode collapse problems of AC-GAN, SA-GAN and SC-GAN.
23
